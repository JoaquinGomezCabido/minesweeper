{"ast":null,"code":"var _jsxFileName = \"/Users/JOAKO/Desktop/Flatiron/000_DraftWork/react-testing/src/components/Player.js\";\nimport React from \"react\";\n\nclass Player extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addCard = () => {\n      let hand = this.state.hand;\n      hand.push(this.props.cards[Math.floor(Math.random() * 12)]);\n      this.setState({\n        hand: hand\n      });\n      this.calculateValue();\n    };\n\n    this.cardValue = card => {\n      if (card === \"J\" || card === \"Q\" || card === \"K\") {\n        return 10;\n      } else if (card === \"A\") {\n        return 11;\n      } else {\n        return card;\n      }\n    };\n\n    this.calculateValue = () => {\n      console.log(this.state.hand.reduce((acc, curr) => {\n        return acc + this.cardValue(curr);\n      }, 0));\n    };\n\n    this.state = {\n      hand: [props.cards[Math.floor(Math.random() * 12)], props.cards[Math.floor(Math.random() * 12)]]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"player\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.state.hand.map(card => React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, card)), React.createElement(\"div\", {\n      className: \"controller\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Stand\"), React.createElement(\"button\", {\n      onClick: this.addCard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Hit\")));\n  }\n\n}\n\nexport default Player;","map":{"version":3,"sources":["/Users/JOAKO/Desktop/Flatiron/000_DraftWork/react-testing/src/components/Player.js"],"names":["React","Player","Component","constructor","props","addCard","hand","state","push","cards","Math","floor","random","setState","calculateValue","cardValue","card","console","log","reduce","acc","curr","render","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAUnBC,OAVmB,GAUT,MAAM;AACf,UAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;AACAA,MAAAA,IAAI,CAACE,IAAL,CAAU,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAjB,CAAV;AAEA,WAAKC,QAAL,CAAc;AACbP,QAAAA,IAAI,EAAEA;AADO,OAAd;AAGA,WAAKQ,cAAL;AACA,KAlBkB;;AAAA,SAoBnBC,SApBmB,GAoBPC,IAAI,IAAI;AACnB,UAAIA,IAAI,KAAK,GAAT,IAAgBA,IAAI,KAAK,GAAzB,IAAgCA,IAAI,KAAK,GAA7C,EAAkD;AACjD,eAAO,EAAP;AACA,OAFD,MAEO,IAAIA,IAAI,KAAK,GAAb,EAAkB;AACxB,eAAO,EAAP;AACA,OAFM,MAEA;AACN,eAAOA,IAAP;AACA;AACD,KA5BkB;;AAAA,SA8BnBF,cA9BmB,GA8BF,MAAM;AACtBG,MAAAA,OAAO,CAACC,GAAR,CACC,KAAKX,KAAL,CAAWD,IAAX,CAAgBa,MAAhB,CAAuB,CAACC,GAAD,EAAMC,IAAN,KAAe;AACrC,eAAOD,GAAG,GAAG,KAAKL,SAAL,CAAeM,IAAf,CAAb;AACA,OAFD,EAEG,CAFH,CADD;AAKA,KApCkB;;AAElB,SAAKd,KAAL,GAAa;AACZD,MAAAA,IAAI,EAAE,CACLF,KAAK,CAACK,KAAN,CAAYC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAZ,CADK,EAELR,KAAK,CAACK,KAAN,CAAYC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAZ,CAFK;AADM,KAAb;AAMA;;AA8BDU,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKf,KAAL,CAAWD,IAAX,CAAgBiB,GAAhB,CAAoBP,IAAI,IACxB;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBA,IAAvB,CADA,CADF,EAIC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,EAEC;AAAQ,MAAA,OAAO,EAAE,KAAKX,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFD,CAJD,CADD;AAWA;;AAnDmC;;AAsDrC,eAAeJ,MAAf","sourcesContent":["import React from \"react\";\n\nclass Player extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thand: [\n\t\t\t\tprops.cards[Math.floor(Math.random() * 12)],\n\t\t\t\tprops.cards[Math.floor(Math.random() * 12)],\n\t\t\t],\n\t\t};\n\t}\n\n\taddCard = () => {\n\t\tlet hand = this.state.hand;\n\t\thand.push(this.props.cards[Math.floor(Math.random() * 12)]);\n\n\t\tthis.setState({\n\t\t\thand: hand,\n\t\t});\n\t\tthis.calculateValue();\n\t};\n\n\tcardValue = card => {\n\t\tif (card === \"J\" || card === \"Q\" || card === \"K\") {\n\t\t\treturn 10;\n\t\t} else if (card === \"A\") {\n\t\t\treturn 11;\n\t\t} else {\n\t\t\treturn card;\n\t\t}\n\t};\n\n\tcalculateValue = () => {\n\t\tconsole.log(\n\t\t\tthis.state.hand.reduce((acc, curr) => {\n\t\t\t\treturn acc + this.cardValue(curr);\n\t\t\t}, 0),\n\t\t);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"player\">\n\t\t\t\t{this.state.hand.map(card => (\n\t\t\t\t\t<div className=\"card\">{card}</div>\n\t\t\t\t))}\n\t\t\t\t<div className=\"controller\">\n\t\t\t\t\t<button>Stand</button>\n\t\t\t\t\t<button onClick={this.addCard}>Hit</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}