{"ast":null,"code":"var _jsxFileName = \"/Users/JOAKO/Desktop/Flatiron/000_DraftWork/react-testing/src/components/Cell.js\";\nimport React from \"react\";\n\nclass Cell extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      if (this.props.flagging && !this.state.flagged) {\n        this.setState({\n          clicked: !this.state.clicked\n        });\n        this.setState({\n          flagged: !this.state.flagged\n        });\n      } else if (this.state.clicked === false) {\n        this.setState({\n          clicked: true\n        });\n\n        if (this.props.isBomb) {\n          this.props.endGame();\n        } else {\n          this.props.updateScore();\n        }\n\n        this.props.victory();\n      }\n    };\n\n    this.showCell = () => {\n      if (this.state.clicked) {\n        if (this.props.isBomb) {\n          return \"💥\";\n        } else {\n          return this.props.calculateSurroundings(this.props.row, this.props.col);\n        }\n      }\n    };\n\n    this.state = {\n      clicked: false,\n      flagged: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"cell \".concat(this.state.clicked ? \"inactive\" : \"active\"),\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text value-\".concat(this.showCell()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.state.flagged ? \"🌝\" : this.showCell()));\n  }\n\n}\n\nexport default Cell;","map":{"version":3,"sources":["/Users/JOAKO/Desktop/Flatiron/000_DraftWork/react-testing/src/components/Cell.js"],"names":["React","Cell","Component","constructor","props","handleClick","flagging","state","flagged","setState","clicked","isBomb","endGame","updateScore","victory","showCell","calculateSurroundings","row","col","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAQnBC,WARmB,GAQL,MAAM;AACnB,UAAI,KAAKD,KAAL,CAAWE,QAAX,IAAuB,CAAC,KAAKC,KAAL,CAAWC,OAAvC,EAAgD;AAC/C,aAAKC,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAE,CAAC,KAAKH,KAAL,CAAWG;AAAvB,SAAd;AACA,aAAKD,QAAL,CAAc;AAAED,UAAAA,OAAO,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAvB,SAAd;AACA,OAHD,MAGO,IAAI,KAAKD,KAAL,CAAWG,OAAX,KAAuB,KAA3B,EAAkC;AACxC,aAAKD,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAd;;AAEA,YAAI,KAAKN,KAAL,CAAWO,MAAf,EAAuB;AACtB,eAAKP,KAAL,CAAWQ,OAAX;AACA,SAFD,MAEO;AACN,eAAKR,KAAL,CAAWS,WAAX;AACA;;AAED,aAAKT,KAAL,CAAWU,OAAX;AACA;AACD,KAvBkB;;AAAA,SAyBnBC,QAzBmB,GAyBR,MAAM;AAChB,UAAI,KAAKR,KAAL,CAAWG,OAAf,EAAwB;AACvB,YAAI,KAAKN,KAAL,CAAWO,MAAf,EAAuB;AACtB,iBAAO,IAAP;AACA,SAFD,MAEO;AACN,iBAAO,KAAKP,KAAL,CAAWY,qBAAX,CAAiC,KAAKZ,KAAL,CAAWa,GAA5C,EAAiD,KAAKb,KAAL,CAAWc,GAA5D,CAAP;AACA;AACD;AACD,KAjCkB;;AAElB,SAAKX,KAAL,GAAa;AACZG,MAAAA,OAAO,EAAE,KADG;AAEZF,MAAAA,OAAO,EAAE;AAFG,KAAb;AAIA;;AA6BDW,EAAAA,MAAM,GAAG;AACR,WACC;AACC,MAAA,SAAS,iBAAU,KAAKZ,KAAL,CAAWG,OAAX,GAAqB,UAArB,GAAkC,QAA5C,CADV;AAEC,MAAA,OAAO,EAAE,KAAKL,WAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIC;AAAK,MAAA,SAAS,uBAAgB,KAAKU,QAAL,EAAhB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKR,KAAL,CAAWC,OAAX,GAAqB,IAArB,GAA4B,KAAKO,QAAL,EAD9B,CAJD,CADD;AAUA;;AA/CiC;;AAkDnC,eAAed,IAAf","sourcesContent":["import React from \"react\";\n\nclass Cell extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tclicked: false,\n\t\t\tflagged: false,\n\t\t};\n\t}\n\n\thandleClick = () => {\n\t\tif (this.props.flagging && !this.state.flagged) {\n\t\t\tthis.setState({ clicked: !this.state.clicked });\n\t\t\tthis.setState({ flagged: !this.state.flagged });\n\t\t} else if (this.state.clicked === false) {\n\t\t\tthis.setState({ clicked: true });\n\n\t\t\tif (this.props.isBomb) {\n\t\t\t\tthis.props.endGame();\n\t\t\t} else {\n\t\t\t\tthis.props.updateScore();\n\t\t\t}\n\n\t\t\tthis.props.victory();\n\t\t}\n\t};\n\n\tshowCell = () => {\n\t\tif (this.state.clicked) {\n\t\t\tif (this.props.isBomb) {\n\t\t\t\treturn \"💥\";\n\t\t\t} else {\n\t\t\t\treturn this.props.calculateSurroundings(this.props.row, this.props.col);\n\t\t\t}\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={`cell ${this.state.clicked ? \"inactive\" : \"active\"}`}\n\t\t\t\tonClick={this.handleClick}\n\t\t\t>\n\t\t\t\t<div className={`text value-${this.showCell()}`}>\n\t\t\t\t\t{this.state.flagged ? \"🌝\" : this.showCell()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Cell;\n"]},"metadata":{},"sourceType":"module"}