{"ast":null,"code":"var _jsxFileName = \"/Users/JOAKO/Desktop/Flatiron/000_DraftWork/react-testing/src/components/Board.js\";\nimport React from \"react\";\nimport \"./Components.css\";\nimport Cell from \"./Cell\";\n\nclass Board extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cells: [],\n      score: 0,\n      isAlive: true\n    };\n\n    this.updateScore = () => {\n      this.setState({\n        score: ++this.state.score\n      });\n    };\n\n    this.endGame = () => {\n      this.setState({\n        isAlive: false\n      });\n      alert(\"BOOM!\\nYour Score was \".concat(this.state.score));\n      this.props.finishGame();\n    };\n\n    this.calculateSurroundings = (row, col) => {\n      let cell1 = !!this.state.cells.find(cell => cell.row === row - 1 && cell.col === col).isBomb ? 1 : 0;\n      let cell2 = !!this.state.cells.find(cell => cell.row === row && cell.col === col + 1).isBomb ? 1 : 0;\n      let cell3 = !!this.state.cells.find(cell => cell.row === row + 1 && cell.col === col).isBomb ? 1 : 0;\n      let cell4 = !!this.state.cells.find(cell => cell.row === row && cell.col === col - 1).isBomb ? 1 : 0;\n      return cell1 + cell2 + cell3 + cell4;\n    };\n  }\n\n  componentDidMount() {\n    let newCells = [];\n\n    for (let i = 0; i < 10; i++) {\n      for (let j = 0; j < 10; j++) {\n        let cell = {\n          row: i,\n          col: j,\n          isBomb: Math.floor(Math.random() * 10) < 1\n        };\n        newCells.push(cell);\n      }\n    }\n\n    this.setState({\n      cells: newCells\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Score: \".concat(this.state.score)), React.createElement(\"div\", {\n      className: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.cells.map(cell => React.createElement(Cell, Object.assign({}, cell, {\n      updateScore: this.updateScore,\n      endGame: this.endGame,\n      calculateSurroundings: this.calculateSurroundings,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/JOAKO/Desktop/Flatiron/000_DraftWork/react-testing/src/components/Board.js"],"names":["React","Cell","Board","Component","state","cells","score","isAlive","updateScore","setState","endGame","alert","props","finishGame","calculateSurroundings","row","col","cell1","find","cell","isBomb","cell2","cell3","cell4","componentDidMount","newCells","i","j","Math","floor","random","push","render","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Components.css\";\nimport Cell from \"./Cell\";\n\nclass Board extends React.Component {\n\tstate = {\n\t\tcells: [],\n\t\tscore: 0,\n\t\tisAlive: true,\n\t};\n\n\tcomponentDidMount() {\n\t\tlet newCells = [];\n\n\t\tfor (let i = 0; i < 10; i++) {\n\t\t\tfor (let j = 0; j < 10; j++) {\n\t\t\t\tlet cell = {\n\t\t\t\t\trow: i,\n\t\t\t\t\tcol: j,\n\t\t\t\t\tisBomb: Math.floor(Math.random() * 10) < 1,\n\t\t\t\t};\n\t\t\t\tnewCells.push(cell);\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({ cells: newCells });\n\t}\n\n\tupdateScore = () => {\n\t\tthis.setState({ score: ++this.state.score });\n\t};\n\n\tendGame = () => {\n\t\tthis.setState({ isAlive: false });\n\t\talert(`BOOM!\\nYour Score was ${this.state.score}`);\n\t\tthis.props.finishGame();\n\t};\n\n\tcalculateSurroundings = (row, col) => {\n\t\tlet cell1 = !!this.state.cells.find(\n\t\t\tcell => cell.row === row - 1 && cell.col === col,\n\t\t).isBomb\n\t\t\t? 1\n\t\t\t: 0;\n\t\tlet cell2 = !!this.state.cells.find(\n\t\t\tcell => cell.row === row && cell.col === col + 1,\n\t\t).isBomb\n\t\t\t? 1\n\t\t\t: 0;\n\t\tlet cell3 = !!this.state.cells.find(\n\t\t\tcell => cell.row === row + 1 && cell.col === col,\n\t\t).isBomb\n\t\t\t? 1\n\t\t\t: 0;\n\t\tlet cell4 = !!this.state.cells.find(\n\t\t\tcell => cell.row === row && cell.col === col - 1,\n\t\t).isBomb\n\t\t\t? 1\n\t\t\t: 0;\n\n\t\treturn cell1 + cell2 + cell3 + cell4;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h3>{`Score: ${this.state.score}`}</h3>\n\t\t\t\t<div className=\"board\">\n\t\t\t\t\t{this.state.cells.map(cell => (\n\t\t\t\t\t\t<Cell\n\t\t\t\t\t\t\t{...cell}\n\t\t\t\t\t\t\tupdateScore={this.updateScore}\n\t\t\t\t\t\t\tendGame={this.endGame}\n\t\t\t\t\t\t\tcalculateSurroundings={this.calculateSurroundings}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}