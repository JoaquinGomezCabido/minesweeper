{"version":3,"sources":["components/Cell.js","components/Board.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["Cell","props","handleClick","state","clicked","flagged","flagging","setState","isBomb","endGame","updateScore","victory","showCell","calculateSurroundings","row","col","className","this","onClick","React","Component","Board","cells","score","isAlive","flag","alert","finishGame","bombs","reduce","acc","curr","console","log","cell1","cell2","cell3","cell4","cell5","cell6","cell7","cell8","find","cell","putFlag","newCells","i","j","Math","floor","random","push","map","key","Game","playing","startGame","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.be3606b2.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Cell extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tclicked: false,\n\t\t\tflagged: false,\n\t\t};\n\t}\n\n\thandleClick = () => {\n\t\tif (this.state.clicked && !this.state.flagged) {\n\t\t\treturn;\n\t\t} else {\n\t\t\tif (this.props.flagging) {\n\t\t\t\tthis.setState({ clicked: !this.state.clicked });\n\t\t\t\tthis.setState({ flagged: !this.state.flagged });\n\t\t\t} else if (this.state.clicked === false) {\n\t\t\t\tthis.setState({ clicked: true });\n\t\t\t\tif (this.props.isBomb) {\n\t\t\t\t\tthis.props.endGame();\n\t\t\t\t} else if (!this.state.flagged) {\n\t\t\t\t\tthis.props.updateScore();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.props.victory();\n\t};\n\n\tshowCell = () => {\n\t\tif (this.state.clicked) {\n\t\t\tif (this.props.isBomb) {\n\t\t\t\treturn \"💥\";\n\t\t\t} else {\n\t\t\t\treturn this.props.calculateSurroundings(this.props.row, this.props.col);\n\t\t\t}\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={`cell ${this.state.clicked ? \"inactive\" : \"active\"}`}\n\t\t\t\tonClick={this.handleClick}\n\t\t\t>\n\t\t\t\t<div className={`text value-${this.showCell()}`}>\n\t\t\t\t\t{this.state.flagged ? \"🌝\" : this.showCell()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Cell;\n","import React from \"react\";\nimport \"./Components.css\";\nimport Cell from \"./Cell\";\n\nclass Board extends React.Component {\n\tstate = {\n\t\tcells: [],\n\t\tscore: 0,\n\t\tisAlive: true,\n\t\tflag: false,\n\t};\n\n\tcomponentDidMount() {\n\t\tlet newCells = [];\n\n\t\tfor (let i = 0; i < 10; i++) {\n\t\t\tfor (let j = 0; j < 10; j++) {\n\t\t\t\tlet cell = {\n\t\t\t\t\trow: i,\n\t\t\t\t\tcol: j,\n\t\t\t\t\tisBomb: Math.floor(Math.random() * 10) < 2,\n\t\t\t\t};\n\t\t\t\tnewCells.push(cell);\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({ cells: newCells });\n\t}\n\n\tupdateScore = () => {\n\t\tlet score = this.state.score;\n\t\tthis.setState({ score: ++score });\n\t};\n\n\tendGame = () => {\n\t\tthis.setState({ isAlive: false });\n\t\talert(`BOOM!💥\\nYour Score was ${this.state.score}`);\n\t\tthis.props.finishGame();\n\t};\n\n\tvictory = () => {\n\t\tlet bombs = this.state.cells.reduce((acc, curr) => {\n\t\t\treturn acc + (curr.isBomb ? 1 : 0);\n\t\t}, 0);\n\n\t\tif (this.state.score === 100 - bombs) {\n\t\t\talert(`You WON!🏆\\nYour Score was ${this.state.score}`);\n\t\t\tthis.props.finishGame();\n\t\t}\n\t\tconsole.log(bombs);\n\t};\n\n\tcalculateSurroundings = (row, col) => {\n\t\tlet cell1 = 0;\n\t\tlet cell2 = 0;\n\t\tlet cell3 = 0;\n\t\tlet cell4 = 0;\n\t\tlet cell5 = 0;\n\t\tlet cell6 = 0;\n\t\tlet cell7 = 0;\n\t\tlet cell8 = 0;\n\n\t\tif (row !== 0) {\n\t\t\tcell1 = !!this.state.cells.find(\n\t\t\t\tcell => cell.row === row - 1 && cell.col === col,\n\t\t\t).isBomb\n\t\t\t\t? 1\n\t\t\t\t: 0;\n\n\t\t\tif (col !== 9) {\n\t\t\t\tcell2 = !!this.state.cells.find(\n\t\t\t\t\tcell => cell.row === row - 1 && cell.col === col + 1,\n\t\t\t\t).isBomb\n\t\t\t\t\t? 1\n\t\t\t\t\t: 0;\n\t\t\t}\n\t\t}\n\n\t\tif (col !== 9) {\n\t\t\tcell3 = !!this.state.cells.find(\n\t\t\t\tcell => cell.row === row && cell.col === col + 1,\n\t\t\t).isBomb\n\t\t\t\t? 1\n\t\t\t\t: 0;\n\n\t\t\tif (row !== 9) {\n\t\t\t\tcell4 = !!this.state.cells.find(\n\t\t\t\t\tcell => cell.row === row + 1 && cell.col === col + 1,\n\t\t\t\t).isBomb\n\t\t\t\t\t? 1\n\t\t\t\t\t: 0;\n\t\t\t}\n\t\t}\n\n\t\tif (row !== 9) {\n\t\t\tcell5 = !!this.state.cells.find(\n\t\t\t\tcell => cell.row === row + 1 && cell.col === col,\n\t\t\t).isBomb\n\t\t\t\t? 1\n\t\t\t\t: 0;\n\t\t\tif (col !== 0) {\n\t\t\t\tcell6 = !!this.state.cells.find(\n\t\t\t\t\tcell => cell.row === row + 1 && cell.col === col - 1,\n\t\t\t\t).isBomb\n\t\t\t\t\t? 1\n\t\t\t\t\t: 0;\n\t\t\t}\n\t\t}\n\n\t\tif (col !== 0) {\n\t\t\tcell7 = !!this.state.cells.find(\n\t\t\t\tcell => cell.row === row && cell.col === col - 1,\n\t\t\t).isBomb\n\t\t\t\t? 1\n\t\t\t\t: 0;\n\n\t\t\tif (row !== 0) {\n\t\t\t\tcell8 = !!this.state.cells.find(\n\t\t\t\t\tcell => cell.row === row - 1 && cell.col === col - 1,\n\t\t\t\t).isBomb\n\t\t\t\t\t? 1\n\t\t\t\t\t: 0;\n\t\t\t}\n\t\t}\n\n\t\treturn cell1 + cell2 + cell3 + cell4 + cell5 + cell6 + cell7 + cell8;\n\t};\n\n\tputFlag = () => {\n\t\tthis.setState({ flag: !this.state.flag });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<button onClick={this.putFlag}>{this.state.flag ? \"🌚\" : \"🌝\"}</button>\n\t\t\t\t<h3>{`Score: ${this.state.score}`}</h3>\n\t\t\t\t<div className=\"board\">\n\t\t\t\t\t{this.state.cells.map(cell => (\n\t\t\t\t\t\t<Cell\n\t\t\t\t\t\t\t{...cell}\n\t\t\t\t\t\t\tupdateScore={this.updateScore}\n\t\t\t\t\t\t\tendGame={this.endGame}\n\t\t\t\t\t\t\tcalculateSurroundings={this.calculateSurroundings}\n\t\t\t\t\t\t\tvictory={this.victory}\n\t\t\t\t\t\t\tflagging={this.state.flag}\n\t\t\t\t\t\t\tisAlive={this.state.isAlive}\n\t\t\t\t\t\t\tkey={`${cell.col}-${cell.row}`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Board;\n","import React from \"react\";\nimport Board from \"./Board\";\n\nclass Game extends React.Component {\n\tstate = {\n\t\tplaying: false,\n\t};\n\n\tstartGame = () => {\n\t\tthis.setState({ playing: true });\n\t};\n\n\tfinishGame = () => {\n\t\tthis.setState({ playing: false });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"game\">\n\t\t\t\t{this.state.playing ? (\n\t\t\t\t\t<Board finishGame={this.finishGame} />\n\t\t\t\t) : (\n\t\t\t\t\t<button onClick={this.startGame}>Start Game</button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Game;\n","import React from \"react\";\nimport \"./App.css\";\nimport Game from \"./components/Game\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>MINESWEEPER</h1>\n\t\t\t<Game />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}